name: "Build Windows/ Linux / ARM macOS"

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-linux:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Install Dependencies
        run: yarn install

      # Runs a set of commands using the runners shell
      - name: Build binaries
        run: yarn run build-ci

      - name: Compress x86 build
        uses: a7ul/tar-action@v1.1.0
        id: compress
        with:
          command: c
          cwd: ./prebuilds/linux/         
          files: |
            ./index.node
          outPath: cider_utils-v0.1.1-napi-v6-linux-x64.tar.gz    

       # Runs a set of commands using the runners shell
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          # Artifact name
          name: linux
          # A file, directory or wildcard pattern that describes what to upload
          path: ./*.tar.gz

  build-windows:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Install Dependencies
        run: yarn install

      # Runs a set of commands using the runners shell
      - name: Build binaries
        run: yarn run build-ci
      - name: Compress x86 build
        uses: a7ul/tar-action@v1.1.0
        id: compress
        with:
          command: c
          cwd: ./prebuilds/win32/
          files: |
            ./index.node
          outPath: cider_utils-v0.1.1-napi-v6-win32-x64.tar.gz   
       # Runs a set of commands using the runners shell
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          # Artifact name
          name: windows
          # A file, directory or wildcard pattern that describes what to upload
          path: ./*.tar.gz

  build-macos:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Install Dependencies
        run: yarn install

      # Runs a set of commands using the runners shell
      - name: Build binaries
        run: yarn run build-ci

      - name: Move to arm
        run: rustup target add aarch64-apple-darwin  

      - name: Build binaries
        run: yarn run build-ci-m1
        
      - name: Create universal node module
        run: lipo -create  -output ./prebuilds/mac-universal/index.node ./prebuilds/mac-arm/index.node ./prebuilds/mac-x86/index.node 
      - name: Compress universal build
        uses: a7ul/tar-action@v1.1.0
        id: compress2
        with:
          command: c
          cwd: ./prebuilds/mac-universal/
          files: |
            ./index.node
          outPath: cider_utils-v0.1.1-napi-v6-darwin-arm64,x64.tar.gz           
       # Runs a set of commands using the runners shell
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          # Artifact name
          name: macos
          # A file, directory or wildcard pattern that describes what to upload
          path: ./*.tar.gz    
                
  final:
    runs-on: ubuntu-latest
    needs: [build-linux, build-macos, build-windows]
    steps:
      - uses: actions/download-artifact@v3

      - name: Display structure of downloaded files
        run: ls -R

      - name: Release Artifact
        uses: marvinpinto/action-automatic-releases@v1.2.1
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "v0.1.1"
          prerelease: false
          files: ./**/*.tar.gz
